
#include<bits/stdc++.h>
using namespace std;
  int maxProfit(vector<int>& p) {
        if(p.size()==0)
        return 0;
        
        int n=p.size();
       
        int obsp= -p[0],ossp=0,ocsp=0;
        for(int i=1;i<n;i++)
        {
         int nbsp=0;
         int nssp=0;
         int ncsp=0;
         
         if(ocsp-p[i]>obsp)
         { nbsp=ocsp-p[i];
         } 
         else
         {   nbsp=obsp;}
         
         
         if(obsp+p[i]>ossp){
             nssp=obsp+p[i];}
         else
         {nssp=ossp;}
            
         
         if(ossp>ocsp)
         {   ncsp=ossp;}
         else
         {ncsp=ocsp;}
         
         
         obsp=nbsp;
         ossp=nssp;
         ocsp=ncsp;
        }
     
        return ossp;
    }
    
    int main()
    {
        int n;
        cin>>n;
        vector<int>v;
        for(int i=0;i<n;i++)
        {int x;cin>>x;v.push_back(x);}
        
        int ans = maxProfit(v);
        cout<<ans<<endl;
    }
